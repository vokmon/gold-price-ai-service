import {
  getCurrentDateTime,
  getFormattedDate,
} from "../../utils/date-utils.ts";
import { GoldPriceSummary } from "../../models/gold-price-summary.ts";
import { HuasenghengDataType } from "../../models/huasengheng.ts";
import { GoldPricePeriodSummaryInfo } from "~/models/gold-price-period-summary.ts";

export const convertSummaryDataToString = (summary: GoldPriceSummary) => {
  const currentDate = getCurrentDateTime("th-TH");
  let message = `
üîî ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ ${currentDate}

üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á 96.5% 
  ‡∏ã‡∏∑‡πâ‡∏≠: ${
    summary.currentPrice.buy ? summary.currentPrice.buy.toLocaleString() : "-"
  } ‡∏ö‡∏≤‡∏ó
  ‡∏Ç‡∏≤‡∏¢: ${
    summary.currentPrice.sell ? summary.currentPrice.sell.toLocaleString() : "-"
  } ‡∏ö‡∏≤‡∏ó
`;

  if (summary.hasEnoughData) {
    message = `${message}
üîç ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
${summary.predictions.map((st) => `  ‚úÖ ${st}`).join("\n")} 

üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
${summary.information.map((st) => `  üî∏ ${st}`).join("\n")} 

***** ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ *****
${summary.suggestions.map((st) => `  ‚ùó ${st}`).join("\n")}
  `;
  }

  return message;
};

export const convertHuasenghengDataToString = (
  data: HuasenghengDataType,
  priceDiff: number,
  diffTime?: string
) => {
  const message = `
  ${getCurrentDateTime("th-TH")}
  üîîüîîüîî ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏π‡∏á
  ‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤: ${diffTime}
  ‡∏£‡∏≤‡∏Ñ‡∏≤${priceDiff > 0 ? "‡∏Ç‡∏∂‡πâ‡∏ô üî∫ " : "‡∏•‡∏á üîª"}: ${priceDiff.toLocaleString()}

  üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    ‡∏ã‡∏∑‡πâ‡∏≠: ${data.Buy.toLocaleString()} ‡∏ö‡∏≤‡∏ó
    ‡∏Ç‡∏≤‡∏¢: ${data.Sell.toLocaleString()} ‡∏ö‡∏≤‡∏ó
  `;

  return message;
};

export const convertGoldPricePeriodSummaryToString = (
  data: GoldPricePeriodSummaryInfo
) => {
  const startDate = getFormattedDate(data.startDate);
  const endDate = getFormattedDate(data.endDate);

  const dateDisplay =
    startDate === endDate ? startDate : `${startDate} - ${endDate}`;

  return `
  ‚≠ê ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${dateDisplay}
  
  ${
    data.currentPrice
      ? `üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á 96.5%
  ‡∏ã‡∏∑‡πâ‡∏≠: ${data.currentPrice.Buy.toLocaleString()} ‡∏ö‡∏≤‡∏ó
  ‡∏Ç‡∏≤‡∏¢: ${data.currentPrice.Sell.toLocaleString()} ‡∏ö‡∏≤‡∏ó
  `
      : ""
  }

  ***** üìä ‡∏™‡∏£‡∏∏‡∏õ *****
  ${data.summary.summaries.map((st) => `‚úÖ ${st}`).join("\n")} 

  ***** üîç ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå *****
  ${data.summary.predictions.map((st) => `üî∏ ${st}`).join("\n")}
  
  ‚ú®‚ú®‚ú®üí∞üìà üìâüìä‚ú®‚ú®‚ú®
  `;
};

export const convertGoldPricePeriodGraphToString = ({
  priceDifference,
  minPrice,
  maxPrice,
  latestPrice,
  earliestPrice,
}: {
  priceDifference: number;
  minPrice: number;
  maxPrice: number;
  latestPrice: number;
  earliestPrice: number;
}) => {
  return `
  ${
    priceDifference === 0
      ? "‚ÜîÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á"
      : priceDifference < 0
      ? "üîª ‡∏•‡∏î‡∏•‡∏á"
      : "üî∫ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô"
  } ${
    priceDifference !== 0
      ? `${Math.abs(priceDifference).toLocaleString()} ‡∏ö‡∏≤‡∏ó`
      : ""
  }

  üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ${latestPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó
  üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ${earliestPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó

  üíπ ‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î-‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${minPrice.toLocaleString()} ‡∏ñ‡∏∂‡∏á ${maxPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó
  `;
};
